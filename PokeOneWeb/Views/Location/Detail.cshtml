@model PokeOneWeb.ViewModels.Locations.LocationDetailViewModel
@{
	ViewData["Title"] = Model.LocationGroupDisplayName;
}
@section Head {
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.3.1/leaflet.css">
	<link rel="stylesheet" href="https://cdn.rawgit.com/ardhi/Leaflet.MousePosition/master/src/L.Control.MousePosition.css">
	<script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.3.1/leaflet.js" type="text/javascript"></script>
	<script src="https://cdn.rawgit.com/ardhi/Leaflet.MousePosition/master/src/L.Control.MousePosition.js" type="text/javascript"></script>

}
<div class="text-container">
    <div id="map" style="margin: auto;"></div>

    <script type="text/javascript">
        @{
            var mapWidth = 1000;
            var mapHeight = (int)(mapWidth * ((double) Model.ImageProperties.ImageHeight) / Model.ImageProperties.ImageWidth);
        }

        var mapWidth = @mapWidth;
        var mapHeight = @mapHeight;
        var imageWidth = @Model.ImageProperties.ImageWidth;
        var imageHeight = @Model.ImageProperties.ImageHeight;
        var mapMinZoom = 0;
        var mapMaxZoom = @Model.ImageProperties.MaxZoomLevel;
        var mapMaxResolution = 1.0;
        var mapMinResolution = Math.pow(2, mapMaxZoom) * mapMaxResolution;

        var mapDiv = document.getElementById("map");
        mapDiv.style.width = mapWidth + "px";
        mapDiv.style.height = mapHeight + "px";

        var crs = L.CRS.Simple;

        var transformFactorX = 1 / (imageWidth / (mapWidth * mapMinResolution));
        var transformFactorY = 1 / (imageHeight / (mapHeight * mapMinResolution));
        crs.transformation = new L.Transformation(transformFactorX, 0, -transformFactorY, 0);

        crs.scale = function (zoom) {
            return Math.pow(2, zoom) / mapMinResolution;
        };

        var mapBounds = new L.LatLngBounds([0, 0], [-imageHeight, imageWidth]);

        var map = new L.Map('map', {
            crs: crs,
            maxZoom: mapMaxZoom,
            minZoom: mapMinZoom,
            maxBounds: mapBounds,
            center: [-(imageHeight / 2), imageWidth / 2],
            zoom: 0
        });

        var layer = L.tileLayer('/images/location_maps/@Model.LocationGroupName/{z}/{x}/{y}.png', {
            bounds: mapBounds,
            noWrap: true,
            continuousWorld: false,
            tms: false
        }).addTo(map);

        L.control.mousePosition().addTo(map);
    </script>
</div>
